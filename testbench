LIBRARY ieee;
USE ieee.std_logic_1164.all;
use work.pacote.all;
use ieee.numeric_std.all;

ENTITY TB_cronometro IS
END TB_cronometro;


ARCHITECTURE rtl OF TB_cronometro IS
    COMPONENT cronometro
        PORT(
                TB_CLOCK_50 : IN STD_LOGIC;
                TB_START_PAUSE : IN STD_LOGIC;
                TB_RESTART : IN STD_LOGIC;
            
                TB_HEX0_D :  out std_logic_vector;
                TB_HEX1_D :  out std_logic_vector;
                TB_HEX2_D :  out std_logic_vector;
                TB_HEX3_D :  out std_logic_vector;
                TB_HEX4_D :  out std_logic_vector;
                TB_HEX5_D :  out std_logic_vector; 
                TB_HEX6_D :  out std_logic_vector;
                TB_HEX7_D :  out std_logic_vector
   
       );
    END COMPONENT;
    
    SIGNAL TB_CLOCK_50 : IN STD_LOGIC;
    SIGNAL TB_START_PAUSE : IN STD_LOGIC;
    SIGNAL TB_RESTART : IN STD_LOGIC;
    
    SIGNAL TB_HEX0_D :  out std_logic_vector;
    SIGNAL TB_HEX1_D :  out std_logic_vector;
    SIGNAL TB_HEX2_D :  out std_logic_vector;
    SIGNAL TB_HEX3_D :  out std_logic_vector;
    SIGNAL TB_HEX4_D :  out std_logic_vector;
    SIGNAL TB_HEX5_D :  out std_logic_vector; 
    SIGNAL TB_HEX6_D :  out std_logic_vector;
    SIGNAL TB_HEX7_D :  out std_logic_vector
   
    
    BEGIN
    dut: ReleTrifasico PORT MAP
    (
        clk => clk,
        ca => ca,
        cb => cb,
        cc => cc,
        e => e,
        c_sec => c_sec,
        la => la,
        lb => lb,
        lc => lc
    );

    clock_process: PROCESS
    BEGIN
        clk <= '0';
        WAIT FOR clk_period/2;
        clk <= '1';
        WAIT FOR clk_period/2;
    END PROCESS;
    
    stim_proc: PROCESS
    BEGIN
              WAIT FOR 5 ns;
              ca <= '0';
              cb <= '0';
              cc <= '0';
              e <= '0';
              WAIT FOR 5 ns;
              ca <= '1';
              cb <= '0';
              cc <= '0';
              e <= '0';
              WAIT FOR 5 ns;
              ca <= '0';
              cb <= '1';
              cc <= '0';
              e <= '0';
              WAIT FOR 5 ns;
              ca <= '1';
              cb <= '1';
              cc <= '0';
              e <= '0';
              WAIT FOR 5 ns;
              ca <= '0';
              cb <= '0';
              cc <= '1';
              e <= '0';
              WAIT FOR 5 ns;
              ca <= '1';
              cb <= '0';
              cc <= '1';
              e <= '0';
              WAIT FOR 5 ns;
              ca <= '0';
              cb <= '1';
              cc <= '1';
              e <= '0';
              WAIT FOR 5 ns;
              ca <= '1';
              cb <= '1';
              cc <= '1';
              e <= '0';
              WAIT FOR 5 ns;
              ca <= '0';
              cb <= '0';
              cc <= '0';
              e <= '1';
              WAIT FOR 5 ns;
              ca <= '1';
              cb <= '0';
              cc <= '0';
              e <= '1';
              WAIT FOR 5 ns;
              ca <= '0';
              cb <= '1';
              cc <= '0';
              e <= '1';
              WAIT FOR 5 ns;
              ca <= '1';
              cb <= '1';
              cc <= '0';
              e <= '1';
              WAIT FOR 5 ns;
              ca <= '0';
              cb <= '0';
              cc <= '1';
              e <= '1';
              WAIT FOR 5 ns;
              ca <= '1';
              cb <= '0';
              cc <= '1';
              e <= '1';
              WAIT FOR 5 ns;
              ca <= '0';
              cb <= '1';
              cc <= '1';
              e <= '1';
              WAIT FOR 5 ns;
              ca <= '1';
              cb <= '1';
              cc <= '1';
              e <= '1';
    END PROCESS;
END rtl;
