LIBRARY ieee;
USE ieee.std_logic_1164.all;
use work.pacote.all;
use ieee.numeric_std.all;

ENTITY TB_cronometro IS
END TB_cronometro;


ARCHITECTURE rtl OF TB_cronometro IS
    COMPONENT cronometro
        PORT(
                TB_CLOCK_50 : IN STD_LOGIC;
                TB_START_PAUSE : IN STD_LOGIC;
                TB_RESTART : IN STD_LOGIC;
            
                TB_HEX0_D :  out std_logic_vector;
                TB_HEX1_D :  out std_logic_vector;
                TB_HEX2_D :  out std_logic_vector;
                TB_HEX3_D :  out std_logic_vector;
                TB_HEX4_D :  out std_logic_vector;
                TB_HEX5_D :  out std_logic_vector; 
                TB_HEX6_D :  out std_logic_vector;
                TB_HEX7_D :  out std_logic_vector
   
       );
    END COMPONENT;
    
    SIGNAL TB_CLOCK_50 : IN STD_LOGIC;
    SIGNAL TB_START_PAUSE : IN STD_LOGIC;
    SIGNAL TB_RESTART : IN STD_LOGIC;
    
    SIGNAL TB_HEX0_D :  out std_logic_vector;
    SIGNAL TB_HEX1_D :  out std_logic_vector;
    SIGNAL TB_HEX2_D :  out std_logic_vector;
    SIGNAL TB_HEX3_D :  out std_logic_vector;
    SIGNAL TB_HEX4_D :  out std_logic_vector;
    SIGNAL TB_HEX5_D :  out std_logic_vector; 
    SIGNAL TB_HEX6_D :  out std_logic_vector;
    SIGNAL TB_HEX7_D :  out std_logic_vector
   
    
    BEGIN
    dut: cronometro PORT MAP
    (
        TB_CLOCK_50 => CLOCK_50,
        TB_START_PAUSE => START_PAUSE,
        TB_RESTART => RESTART,
        TB_HEX0_D => HEX0_D,
        TB_HEX1_D => HEX1_D,
        TB_HEX2_D => HEX2_D,
        TB_HEX3_D => HEX3_D,
        TB_HEX4_D => HEX4_D,
        TB_HEX5_D => HEX5_D,
        TB_HEX6_D => HEX6_D,
        TB_HEX7_D => HEX7_D,
    );

    
    SPR_process: PROCESS
    BEGIN
              WAIT FOR 50 s;
              TB_RESTART <= '1';
             
              WAIT FOR 5 s;
              TB_START_PAUSE <= '1';
           
              WAIT FOR 5 s;
              TB_START_PAUSE <= '1';
             
              WAIT FOR 1500 s;
              TB_RESTART <= '1';
              
    END PROCESS;
END rtl;
